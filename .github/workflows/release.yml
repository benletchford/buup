name: Release Please

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release-please:
    name: Run release-please
    runs-on: ubuntu-latest
    outputs:
      created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: rust
          # Optionally configure package name if Cargo.toml is not at the root
          # package-name: your-crate-name
          # You might need a PAT instead of GITHUB_TOKEN if you hit permission issues
          # token: ${{ secrets.YOUR_PAT }}

  publish:
    name: Publish to crates.io
    needs: release-please
    runs-on: ubuntu-latest
    # Only run if release-please created a new release
    if: needs.release-please.outputs.created == 'true'
    environment: # Optional: Use GitHub Environments for added security/control
      name: crates_io
      url: https://crates.io/crates/buup # Replace 'buup' if your crate name differs
    steps:
      - uses: actions/checkout@v4
        with:
          # Checkout the specific tag created by release-please
          ref: ${{ needs.release-please.outputs.tag_name }}

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@v2

      # If your project is a workspace, you might need to publish members individually
      # or use a tool like `cargo-workspaces` or `katyo/publish-crates` here.
      # For a single crate:
      - name: Publish crate
        run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
        env:
          # CARGO_REGISTRY_TOKEN needs to be set in GitHub Secrets
          # (or Environment Secrets if using GitHub Environments)
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
